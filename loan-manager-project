// backend/app.js
const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const pool = require('./config/db');

const app = express();
app.use(cors());
app.use(bodyParser.json());

// Routes
const applicationRoutes = require('./routes/applicationRoutes');
app.use('/api', applicationRoutes);

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));

// backend/config/db.js
const { Pool } = require('pg');
const pool = new Pool({
  user: 'your_db_user',
  host: 'localhost',
  database: 'loan_manager',
  password: 'your_db_password',
  port: 5432,
});
module.exports = pool;

// backend/models/applicationModel.js
const pool = require('../config/db');

const createApplication = async ({ name, email, amount, status }) => {
  const result = await pool.query(
    'INSERT INTO applications (name, email, amount, status) VALUES ($1, $2, $3, $4) RETURNING *',
    [name, email, amount, status]
  );
  return result.rows[0];
};

const getApplications = async () => {
  const result = await pool.query('SELECT * FROM applications');
  return result.rows;
};

module.exports = { createApplication, getApplications };

// backend/routes/applicationRoutes.js
const express = require('express');
const router = express.Router();
const { createApplication, getApplications } = require('../models/applicationModel');

router.post('/applications', async (req, res) => {
  try {
    const newApp = await createApplication(req.body);
    res.status(201).json(newApp);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

router.get('/applications', async (req, res) => {
  try {
    const applications = await getApplications();
    res.status(200).json(applications);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

module.exports = router;

// frontend/src/components/ApplicationForm.js
import React, { useState } from 'react';
import axios from 'axios';

const ApplicationForm = () => {
  const [formData, setFormData] = useState({ name: '', email: '', amount: '', status: 'pending' });

  const handleChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });

  const handleSubmit = async (e) => {
    e.preventDefault();
    await axios.post('http://localhost:5000/api/applications', formData);
    alert('Application submitted!');
  };

  return (
    <form onSubmit={handleSubmit}>
      <input name="name" placeholder="Name" onChange={handleChange} required />
      <input name="email" placeholder="Email" onChange={handleChange} required />
      <input name="amount" placeholder="Loan Amount" onChange={handleChange} required />
      <button type="submit">Submit</button>
    </form>
  );
};

export default ApplicationForm;

// frontend/src/components/Dashboard.js
import React, { useEffect, useState } from 'react';
import axios from 'axios';

const Dashboard = () => {
  const [applications, setApplications] = useState([]);

  useEffect(() => {
    const fetchData = async () => {
      const res = await axios.get('http://localhost:5000/api/applications');
      setApplications(res.data);
    };
    fetchData();
  }, []);

  const total = applications.length;
  const average = total ? (applications.reduce((sum, a) => sum + Number(a.amount), 0) / total) : 0;
  const success = applications.filter(a => a.status === 'approved').length;
  const rate = total ? (success / total) * 100 : 0;

  return (
    <div>
      <h2>Dashboard</h2>
      <p>Total Applications: {total}</p>
      <p>Average Loan Amount: {average.toFixed(2)}</p>
      <p>Success Rate: {rate.toFixed(2)}%</p>
    </div>
  );
};

export default Dashboard;

// frontend/src/App.js
import React from 'react';
import ApplicationForm from './components/ApplicationForm';
import Dashboard from './components/Dashboard';

function App() {
  return (
    <div>
      <h1>Loan Manager</h1>
      <ApplicationForm />
      <Dashboard />
    </div>
  );
}

export default App;
